<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h2">
        <i class="fas fa-tasks text-primary me-2"></i>
        Minhas Tarefas
    </h1>
    <a href="/tasks/create" class="btn btn-primary">
        <i class="fas fa-plus me-1"></i>
        Nova Tarefa
    </a>
</div>

<!-- Filtros -->
<div class="row mb-4">
    <div class="col-md-6">
        <select id="statusFilter" class="form-select" aria-label="Filtrar por status">
            <option value="">Todos os status</option>
            <option value="pendente">Pendente</option>
            <option value="em_andamento">Em Andamento</option>
            <option value="concluida">Concluída</option>
        </select>
    </div>
    <div class="col-md-6">
        <select id="categoryFilter" class="form-select" aria-label="Filtrar por categoria">
            <option value="">Todas as categorias</option>
            <% if (Array.isArray(categories) && categories.length > 0) { %>
                <% categories.forEach(category => { %>
                    <option value="<%= category.id %>"><%= category.name %></option>
                <% }); %>
            <% } %>
        </select>
    </div>
</div>

<!-- Lista de Tarefas -->
<div id="tasksContainer">
    <% if (!tasks || tasks.length === 0) { %>
        <div class="alert alert-info text-center">
            <i class="fas fa-info-circle me-2"></i>
            Nenhuma tarefa encontrada. <a href="/tasks/create">Criar primeira tarefa</a>
        </div>
    <% } else { %>
        <div class="row" id="tasksList">
            <% tasks.forEach(task => { %>
                <div class="col-md-6 col-lg-4 mb-3 task-card" 
                     data-task-id="<%= task.id %>"
                     data-status="<%= task.status %>" 
                     data-category="<%= task.category_id || '' %>">
                    <div class="card h-100 shadow-sm">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <span class="badge bg-<%= task.status === 'concluida' ? 'success' : task.status === 'em_andamento' ? 'warning' : 'secondary' %>">
                                <%= task.status === 'concluida' ? 'Concluída' : task.status === 'em_andamento' ? 'Em Andamento' : 'Pendente' %>
                            </span>
                            <% if (task.category_name) { %>
                                <small class="text-muted">
                                    <i class="fas fa-tag me-1"></i>
                                    <%= task.category_name %>
                                </small>
                            <% } %>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title"><%= task.title %></h5>
                            <% if (task.description) { %>
                                <p class="card-text"><%= task.description %></p>
                            <% } %>
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="btn-group w-100" role="group">
                                <a href="/tasks/<%= task.id %>/edit" 
                                   class="btn btn-outline-primary btn-sm" 
                                   aria-label="Editar tarefa"
                                   title="Editar tarefa">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" 
                                        class="btn btn-outline-success btn-sm" 
                                        aria-label="Alterar status da tarefa"
                                        title="Alterar status"
                                        onclick="toggleStatus(<%= task.id %>, '<%= task.status %>')">
                                    <i class="fas fa-check"></i>
                                </button>
                                <button type="button" 
                                        class="btn btn-outline-danger btn-sm" 
                                        aria-label="Excluir tarefa"
                                        title="Excluir tarefa"
                                        onclick="deleteTask(<%= task.id %>)">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    <% } %>
</div>

<!-- Modal de Confirmação -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar Exclusão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Tem certeza que deseja excluir esta tarefa?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Excluir</button>
            </div>
        </div>
    </div>
</div>

<script>
// Filtros
document.getElementById('statusFilter').addEventListener('change', filterTasks);
document.getElementById('categoryFilter').addEventListener('change', filterTasks);

function filterTasks() {
    const statusFilter = document.getElementById('statusFilter').value;
    const categoryFilter = document.getElementById('categoryFilter').value;
    const taskCards = document.querySelectorAll('.task-card');

    taskCards.forEach(card => {
        const taskStatus = card.getAttribute('data-status');
        const taskCategory = card.getAttribute('data-category');
        
        let showCard = true;
        
        if (statusFilter && taskStatus !== statusFilter) {
            showCard = false;
        }
        
        if (categoryFilter && taskCategory !== categoryFilter) {
            showCard = false;
        }
        
        card.classList.toggle('d-none', !showCard);
    });
}

// Toggle status da tarefa
async function toggleStatus(taskId, currentStatus) {
    let newStatus;
    switch(currentStatus) {
        case 'pendente':
            newStatus = 'em_andamento';
            break;
        case 'em_andamento':
            newStatus = 'concluida';
            break;
        case 'concluida':
            newStatus = 'pendente';
            break;
        default:
            newStatus = 'em_andamento';
    }
    
    try {
        const response = await fetch(`/tasks/api/${taskId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ status: newStatus })
        });
        
        if (response.ok) {
            const card = document.querySelector(`.task-card[data-task-id="${taskId}"]`);
            if (card) {
                card.setAttribute('data-status', newStatus);
                const badge = card.querySelector('.badge');
                badge.textContent = newStatus === 'concluida' ? 'Concluída' :
                                  newStatus === 'em_andamento' ? 'Em Andamento' : 'Pendente';
                badge.className = `badge bg-${newStatus === 'concluida' ? 'success' : newStatus === 'em_andamento' ? 'warning' : 'secondary'}`;
                filterTasks();
            }
        } else {
            alert('Erro ao atualizar status da tarefa');
        }
    } catch (error) {
        console.error('Erro:', error);
        alert('Erro ao atualizar status da tarefa');
    }
}

// Excluir tarefa
async function deleteTask(taskId) {
    const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
    const confirmBtn = document.getElementById('confirmDeleteBtn');
    
    confirmBtn.onclick = async () => {
        try {
            const response = await fetch(`/tasks/api/${taskId}`, {
                method: 'DELETE'
            });
            
            if (response.ok) {
                const card = document.querySelector(`.task-card[data-task-id="${taskId}"]`);
                if (card) card.remove();
                modal.hide();
            } else {
                alert('Erro ao excluir tarefa');
            }
        } catch (error) {
            console.error('Erro:', error);
            alert('Erro ao excluir tarefa');
        }
    };
    
    modal.show();
}
</script>